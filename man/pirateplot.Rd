% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pirateplot_function.R
\name{pirateplot}
\alias{pirateplot}
\title{pirateplot}
\usage{
pirateplot(formula, data, line.fun = mean, pal = "appletv",
  back.col = gray(1), point.cex = 1, point.pch = 1, point.lwd = 1,
  cut.min = "", cut.max = "", width.min = 0.3, width.max = NA,
  bean.o = NULL, point.o = NULL, bar.o = NULL, hdi.o = NULL,
  line.o = NULL, theme.o = 1, hdi.iter = 1000, jitter.val = 0.03,
  line.lwd = 4, ylim = NULL, xlim = NULL, xlab = NULL, ylab = NULL,
  main = NULL, add = F, ...)
}
\arguments{
\item{formula}{(formula) A formula in the form dv ~ iv indicating the dv and iv to be plotted.}

\item{data}{(dataframe) Data which to perform the beanplot on. This data can consist of dataframes, vectors and/or formulas. For each formula, a dataset can be specified with data=[dataset], and a subset can be specified with subset=[subset]. If subset/data arguments are passed, but there are not enough subset/data arguments, they are reused. Additionally, na.action, drop.unused.levels and xlev can be passed to model.frame in the same way. Also, parameters for axis and title can be passed.}

\item{line.fun}{(function) A function that determines how average lines and bar heights are determined (default is mean).}

\item{pal}{(string) A string indicating the color palette of the plot. Can be a single color, or the name of a palette in the piratepal() function (e.g.; "basel", "google", "southpark")}

\item{point.cex, point.pch}{point.lwd (numeric) Numbers indicating the size, pch type, and line width of raw data points.}

\item{cut.min, }{cut.max (numeric) Optimal minimum and maximum values of the beans.}

\item{width.min, width.max}{(numeric) The minimum and maximum width of a bean.}

\item{bar.o, point.o, hdi.o, line.o, bean.o}{(numeric) A number between 0 and 1 indicating how opaque to make the bars, points, hdi band, average line, and beans respectively. These values override}

\item{theme.o}{(integer) An integer in the set 1, 2, 3, 4 specifying an opacity theme (that is, specific values of bar.o, point.o, etc.). You can override specific opacity values in a theme by specifying bar.o, hdi.o (etc.)}

\item{hdi.iter}{(integer) An integer indicating how many iterations to run when calculating the HDI.}

\item{jitter.val}{(numeric) A number indicaing how much to jitter the points horizontally. Defaults to 0.05.}

\item{line.lwd}{(numeric) A number indicating the width of the average lines.}

\item{add}{(logical) A logical value indicating whether to add the pirateplot to an existing plotting space or not.}

\item{...}{other arguments passed on to the plot function (e.g.; main, xlab, ylab, ylim)}

\item{backcol}{(string) A string indicating the color of the plotting background}
}
\description{
The pirateplot function creates an RDI plot (Raw data, Descriptive and Inferential statistic) pirate version of the fantastic beanplot function in the beanplot package. Just like a beanplot, pirateplot takes a discrete iv and a continuous dv, and creates a plot showing raw data, smoothed densities and central tendency. In addition, pirateplot adds the option for a 95% Highest Density Intervals (HDI), and has a few aesthetic differences preferred by pirates.
}
\examples{



# Pirateplots of the ChickWeight dataframe


par(mfrow = c(4, 2))

# Plot 1: Theme 1

pirateplot(formula = weight ~ Diet,
          data = ChickWeight,
          main = "Theme 1",
          theme.o = 1
)

# Plot 2: Theme 1 + grayscale

pirateplot(formula = weight ~ Diet,
          data = ChickWeight,
          main = "Theme 1 + grayscale",
          theme.o = 1,
          pal = "black"
)


# Plot 3: Theme 2

pirateplot(formula = weight ~ Diet,
          data = ChickWeight,
          main = "Theme 2",
          theme.o = 2
)

# Plot 4: Theme 2 + grayscale

pirateplot(formula = weight ~ Diet,
          data = ChickWeight,
          main = "Theme 2 + grayscale",
          pal = "black",
          theme.o = 2,
          point.o = .2,
          point.pch = 16
)


# Plot 5: Theme 3

pirateplot(formula = weight ~ Diet,
          data = ChickWeight,
          main = "Theme 3\\nHDIs take time to calculate...",
          theme.o = 3
)

# Plot 6: Theme 3 + white on black

pirateplot(formula = weight ~ Diet,
          data = ChickWeight,
          main = "Theme 3 + white on black\\nHDIs take time to calculate...",
          pal = "white",
          theme.o = 3,
          point.pch = 16,
          back.col = gray(.2)
)

# Plot 7: Theme 0 - Fully customised

pirateplot(formula = weight ~ Diet,
          data = ChickWeight,
          main = "Theme 0\\nFully customized",
          pal = "google",
          point.o = .2,
          line.o = 1,
          theme.o = 0,
          line.lwd = 10,
          point.pch = 16,
          point.cex = 1.5,
          jitter.val = .1
)


# Plot 8: Theme 0\\nFully customised

pirateplot(formula = weight ~ Diet,
          data = ChickWeight,
          main = "Theme 0\\nFully customized",
          pal = "info2",
          point.o = .03,
          line.o = 0,
          bean.o = 1,
          theme.o = 0,
          back.col = transparent("steelblue4", .5),
          line.lwd = 10,
          point.pch = 16,
          point.cex = 3,
          jitter.val = .00
)


par(mfrow = c(1, 1))



}
\keyword{plot}

